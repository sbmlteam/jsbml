<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
  <comment>
    ----------------------------------------------------------------------------
    This file is part of JSBML. Please visit http://sbml.org/Software/JSBML
    for the latest version of JSBML and more information about SBML.

    Copyright (C) 2009-2022 jointly by the following organizations:
    1. The University of Tuebingen, Germany
    2. EMBL European Bioinformatics Institute (EBML-EBI), Hinxton, UK
    3. The California Institute of Technology, Pasadena, CA, USA
    4. The University of California, San Diego, La Jolla, CA, USA
    5. The Babraham Institute, Cambridge, UK
    6. The University of Utah, Salt Lake City, UT, USA

    This library is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation. A copy of the license agreement is provided
    in the file named "LICENSE.txt" included with this software distribution
    and also available online as http://sbml.org/Software/JSBML/License.
    ----------------------------------------------------------------------------

    A collection of text messages to be presented to uses upon certain events.

    Author:  Andreas Dr√§ger
    Since:   1.1
  </comment>
  
  <entry key="ArraysMathCheck.logMathVectorIrregular">For MathML operations with two or more operands involving MathML vectors or SBase objects with a list of Dimension objects, the number of dimensions and their size must agree for all operands unless the operand is a scalar type (i.e., it does not have a list of Dimension 31 objects). (Reference: SBML Level 3 Package Specification for" Arrays, Version 1, Section 3.5 on page 10.)</entry>
  <entry key="ArraysMathCheck.logSelectorInconsistency">The first argument of a MathML selector must be a MathML vector object or a valid identifier to an SBase object extended with a list of Dimension objects. (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.5 on page 10.)</entry>
  
  <entry key="DimensionArrayDimCheck.logArrayDimensionUniqueness">The ListOfDimensions associated with an SBase object must not have multiple Dimension objects with the same arrays:arrayDimension attribute. (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.3 on page 6.)</entry>
  <entry key="DimensionArrayDimCheck.logArrayDimensionMissing">The ListOfDimensions associated with an SBase object must have a Dimension object with arrays:arrayDimension attribute set to 0 before adding a Dimension object with arrays:arrayDimension attribute set to 1. Similarly, the ListOfDimensions in an SBase object must have Dimension objects, where one of them has arrays:arrayDimension attribute set to 0 and the other set to 1 before adding a Dimension object with arrays:arrayDimension attribute set to 2. (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.3 on page 6.)</entry>

  <entry key="DimensionSizeCheck.logMissingDimensionAttribute">A Dimension object must have a value for the attributes arrays:arrayDimension and arrays:size, and may additionally have the attributes arrays:id and arrays:name. (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.3 on page 6.)</entry>
  <entry key="DimensionSizeCheck.logDimensionSizeInvalid">The value of the arrays:size attribute, if set on a given Dimension object, must be a valid SIdRef to an object of type Parameter. (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.3 on page 6.)</entry>
  <entry key="DimensionSizeCheck.logDimensionSizeValueInconsistency">The value of the Parameter referenced by the arrays:size attribute must be a non-negative scalar constant integer. (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.3 on page 6.)</entry>
    
  <entry key="IndexArrayDimCheck.logArrayDimensionUniqueness">The ListOfIndices associated with an SBase object must not have multiple Index objects with the same arrays:arrayDimension attribute. (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.3 on page 6.)</entry>
  <entry key="IndexArrayDimCheck.logArrayDimensionMissing">The ListOfIndices associated with an SBase object must have a Index object with arrays:arrayDimension attribute set to 0 before adding a Index object with arrays:arrayDimension attribute set to 1. Similarly, the ListOfIndices in an SBase object must have Index objects, where one of them has arrays:arrayDimension attribute set to 0 and the other set to 1 before adding a Index object with arrays:arrayDimension attribute set to 2. (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.3 on page 6.)</entry>
  
  <entry key="IndexAttributesCheck.logDimensionMismatch">The object referenced by the SIdRef indicated by the arrays:referencedAttribute attribute must include an arrays:arrayDimension matching the arrays:arrayDimension for the Index. (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.4 on 37 page 8.)</entry>
  <entry key="IndexAttributesCheck.logNotBounded">For each possible value of each Dimension id (i.e., 0 to size-1 of the Dimension referred to) that appears in the MathML math element, there should be no array out-of-bounds problems. Namely, it must evaluate to a non-negative integer that is less than the size of the corresponding Dimension for the object being indexed.</entry>
  <entry key="IndexAttributesCheck.logNotStaticComp">The MathML math element in an Index object must be statically computable. In other words, any identifier that appears in the math element, other than a Dimension id for the object with this Index , must be a constant. (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.4 on page 8.)</entry>
  <entry key="IndexAttributesCheck.logIndexMissingAttribute">An Index object must have a value for the attributes arrays:arrayDimension, and arrays:referencedAttribute . (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.4 on page 8.)</entry>
  <entry key="IndexAttributesCheck.logInvalidRefAttribute">The value of the arrays:referencedAttribute attribute, if set on a given Index object, must be an existing attribute of type SIdRef with a value that references a valid SId. (Reference: SBML Level 3 Package Specification for Arrays, Version 1, Section 3.4 on page 8.)</entry>
  
  <entry key="SBaseWithDimensionCheck.check">The object {0} cannot have a listOfDimensions.</entry>
  <entry key="SBaseWithDimensionCheck.logDimensionError">In SBML Level~3 Core, Models, FunctionDefinitions, Units, UnitDefinitions, KineticLaws, LocalParameters, Triggers, Priorities, and Delays are not permitted to have a ListOfDimensions. (Reference: SBML Level 3 11 Package Specification for Arrays, Version 1, Section 3.3 on page 7.)</entry>
  
</properties>
